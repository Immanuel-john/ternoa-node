
//! Autogenerated weights for `ternoa_nft`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-01, STEPS: `5`, REPEAT: 2, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `marko-MS-7B85`, CPU: `AMD Ryzen 7 5800X 8-Core Processor`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("alphanet-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/ternoa
// benchmark
// pallet
// --chain
// alphanet-dev
// --steps=5
// --repeat=2
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/
// --pallet=ternoa_auction

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `ternoa_auction`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> ternoa_auction::WeightInfo for WeightInfo<T> {
	// Storage: NFT Nfts (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: Auction Deadlines (r:1 w:1)
	// Storage: Auction Auctions (r:0 w:1)
	/// The range of component `s` is `[0, 98]`.
	fn create_auction(_s: u32) -> Weight {
		Weight::from_ref_time(10_000_000 as u64)
	}
	// Storage: Auction Auctions (r:1 w:1)
	// Storage: NFT Nfts (r:1 w:1)
	// Storage: Auction Deadlines (r:1 w:1)
	/// The range of component `s` is `[0, 99]`.
	fn cancel_auction(_s: u32) -> Weight {
		Weight::from_ref_time(10_000_000 as u64)
	}
	// Storage: Auction Auctions (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: NFT Nfts (r:1 w:1)
	// Storage: System Account (r:3 w:3)
	// Storage: Auction Deadlines (r:1 w:1)
	// Storage: Auction Claims (r:1 w:1)
	/// The range of component `s` is `[0, 99]`.
	fn end_auction(_s: u32) -> Weight {
		Weight::from_ref_time(10_000_000 as u64)
	}
	// Storage: Auction Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	/// The range of component `s` is `[0, 9]`.
	fn add_bid(_s: u32) -> Weight {
		Weight::from_ref_time(10_000_000 as u64)
	}
	// Storage: Auction Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	/// The range of component `s` is `[0, 9]`.
	fn remove_bid(_s: u32) -> Weight {
		Weight::from_ref_time(10_000_000 as u64)
	}
	// Storage: Auction Auctions (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: NFT Nfts (r:1 w:1)
	// Storage: System Account (r:3 w:3)
	// Storage: Auction Deadlines (r:1 w:1)
	/// The range of component `s` is `[0, 99]`.
	fn buy_it_now(_s: u32) -> Weight {
		Weight::from_ref_time(10_000_000 as u64)
	}
	// Storage: Auction Claims (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn claim() -> Weight {
		Weight::from_ref_time(10_000_000 as u64)
	}
}
