
//! Autogenerated weights for `ternoa_auction`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-14, STEPS: `5`, REPEAT: 2, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("alphanet-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/ternoa
// benchmark
// --chain
// alphanet-dev
// --steps=5
// --repeat=2
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/
// --pallet=ternoa_auction

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `ternoa_rent`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> ternoa_auction::WeightInfo for WeightInfo<T> {
	// Storage: Nfts Data (r:1 w:1)
	// Storage: Nfts Series (r:1 w:0)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: Auctions BidHistorySize (r:1 w:0)
	// Storage: Auctions Deadlines (r:1 w:1)
	// Storage: Auctions Auctions (r:0 w:1)
	fn create_auction() -> Weight {
		(39_280_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: Nfts Data (r:1 w:1)
	// Storage: Auctions Deadlines (r:1 w:1)
	fn cancel_auction() -> Weight {
		(27_890_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: System Account (r:3 w:3)
	// Storage: Nfts Data (r:1 w:1)
	// Storage: Auctions Deadlines (r:1 w:1)
	// Storage: Auctions Claims (r:1 w:1)
	fn end_auction() -> Weight {
		(80_181_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn add_bid() -> Weight {
		(51_450_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn remove_bid() -> Weight {
		(44_811_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: System Account (r:3 w:3)
	// Storage: Nfts Data (r:1 w:1)
	// Storage: Auctions Deadlines (r:1 w:1)
	fn buy_it_now() -> Weight {
		(76_360_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(7 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: System Account (r:3 w:3)
	// Storage: Nfts Data (r:1 w:1)
	// Storage: Auctions Deadlines (r:1 w:1)
	// Storage: Auctions Claims (r:1 w:1)
	fn complete_auction() -> Weight {
		(76_161_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: Auctions Claims (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn claim() -> Weight {
		(45_170_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}
